name: Python CI/CD
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
        - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Black formatter check
      run: |
        black .
    - name: Run migrations
      env:
        ODOO_API_ENCRYPTION_KEY: ${{ secrets.ODOO_API_ENCRYPTION_KEY }}
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      run: python manage.py migrate
    - name: Run tests with coverage
      env:
        ODOO_API_ENCRYPTION_KEY: ${{ secrets.ODOO_API_ENCRYPTION_KEY }}
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      run: python manage.py test